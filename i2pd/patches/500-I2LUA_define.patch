From 442a0c48e7f6ce7c67b06a3839a6360d695e1430 Mon Sep 17 00:00:00 2001
From: orignal <i2porignal@yandex.ru>
Date: Wed, 19 Oct 2016 10:23:02 -0400
Subject: [PATCH] fixed #675. I2LUA define

---
 Destination.cpp |  2 ++
 Destination.h   | 15 +++++++++------
 NetDb.h         |  1 -
 3 files changed, 11 insertions(+), 7 deletions(-)

diff --git a/Destination.cpp b/Destination.cpp
index 80eecaa..d020d96 100644
--- a/Destination.cpp
+++ b/Destination.cpp
@@ -718,6 +718,7 @@ namespace client
 			return false;
 	}	
 
+#ifdef I2LUA
 	void ClientDestination::Ready(ReadyPromise & p)
 	{
 		ScheduleCheckForReady(&p);
@@ -741,6 +742,7 @@ namespace client
 		else // we are not ready
 			ScheduleCheckForReady(p);
 	}
+#endif
 	
 	void ClientDestination::HandleDataMessage (const uint8_t * buf, size_t len)
 	{
diff --git a/Destination.h b/Destination.h
index 22ffa60..e2d532e 100644
--- a/Destination.h
+++ b/Destination.h
@@ -8,7 +8,9 @@
 #include <set>
 #include <string>
 #include <functional>
+#ifdef I2LUA
 #include <future>
+#endif
 #include <boost/asio.hpp>
 #include "Identity.h"
 #include "TunnelPool.h"
@@ -145,18 +147,19 @@ namespace client
 	class ClientDestination: public LeaseSetDestination
 	{
 		public:
+#ifdef I2LUA
 			// type for informing that a client destination is ready
 			typedef std::promise<std::shared_ptr<ClientDestination> > ReadyPromise;
+			// informs promise with shared_from_this() when this destination is ready to use
+			// if cancelled before ready, informs promise with nullptr
+			void Ready(ReadyPromise & p);
+#endif
 		
 			ClientDestination (const i2p::data::PrivateKeys& keys, bool isPublic, const std::map<std::string, std::string> * params = nullptr);
 			~ClientDestination ();
 			
 			bool Start ();
 			bool Stop ();
-     
-			// informs promise with shared_from_this() when this destination is ready to use
-			// if cancelled before ready, informs promise with nullptr
-			void Ready(ReadyPromise & p);
 			
 			const i2p::data::PrivateKeys& GetPrivateKeys () const { return m_Keys; };
 			void Sign (const uint8_t * buf, int len, uint8_t * signature) const { m_Keys.Sign (buf, len, signature); };	
@@ -191,10 +194,10 @@ namespace client
 			std::shared_ptr<ClientDestination> GetSharedFromThis ()
 			{ return std::static_pointer_cast<ClientDestination>(shared_from_this ()); }   
 			void PersistTemporaryKeys ();
-
+#ifdef I2LUA
 			void ScheduleCheckForReady(ReadyPromise * p);
 			void HandleCheckForReady(const boost::system::error_code & ecode, ReadyPromise * p);
-      
+#endif      
 		private:
 
 			i2p::data::PrivateKeys m_Keys;
diff --git a/NetDb.h b/NetDb.h
index d8ee148..d295ebb 100644
--- a/NetDb.h
+++ b/NetDb.h
@@ -8,7 +8,6 @@
 #include <string>
 #include <thread>
 #include <mutex>
-#include <future>
 
 #include "Base.h"
 #include "Gzip.h"
